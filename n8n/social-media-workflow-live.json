{
  "name": "Go2Thailand Social Media Automation - Live Data",
  "nodes": [
    {
      "id": "schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "name": "Daily Schedule",
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24,
              "triggerAtHour": 10
            }
          ]
        }
      },
      "position": [240, 300]
    },
    {
      "id": "contentSelector",
      "type": "n8n-nodes-base.code",
      "name": "Select Content Type",
      "parameters": {
        "jsCode": "// Determine which content type to post based on day of week\nconst dayOfWeek = new Date().getDay();\nconst contentTypes = {\n  1: 'food',      // Monday\n  2: 'attraction', // Tuesday\n  3: 'city',      // Wednesday\n  4: 'beach',     // Thursday\n  5: 'attraction', // Friday\n  6: 'city',      // Saturday\n  0: 'food'       // Sunday\n};\n\nreturn [{\n  contentType: contentTypes[dayOfWeek],\n  dayOfWeek: dayOfWeek\n}];"
      },
      "position": [460, 300]
    },
    {
      "id": "fetchLiveContent",
      "type": "n8n-nodes-base.httpRequest",
      "name": "Fetch Live Content",
      "parameters": {
        "method": "GET",
        "url": "=https://go2-thailand.com/api/social-media/{{$node[\"contentSelector\"].json[\"contentType\"]}}",
        "options": {
          "headers": {
            "x-webhook-key": "{{$credentials.n8nWebhookKey}}"
          }
        },
        "responseFormat": "json"
      },
      "position": [680, 300]
    },
    {
      "id": "selectRandom",
      "type": "n8n-nodes-base.code",
      "name": "Select Random Post",
      "parameters": {
        "jsCode": "// Select random post from API response\nconst posts = $input.first().json;\nconst randomIndex = Math.floor(Math.random() * posts.length);\nconst selectedPost = posts[randomIndex];\n\n// Add tracking info\nselectedPost.postedAt = new Date().toISOString();\nselectedPost.source = 'n8n-automation-live';\n\n// Store post ID to avoid duplicates\nselectedPost.uniqueId = `${selectedPost.type}-${selectedPost.id}-${Date.now()}`;\n\nreturn [selectedPost];"
      },
      "position": [900, 300]
    },
    {
      "id": "checkDuplicate",
      "type": "n8n-nodes-base.googleSheets",
      "name": "Check Duplicate",
      "parameters": {
        "operation": "read",
        "sheetId": "{{$credentials.socialMediaLogSheet}}",
        "range": "PostLog!A:B",
        "options": {
          "returnAllMatches": true
        }
      },
      "position": [1120, 300]
    },
    {
      "id": "formatForFacebook",
      "type": "n8n-nodes-base.code",
      "name": "Format for Facebook",
      "parameters": {
        "jsCode": "const post = $input.first().json;\nconst recentPosts = $node[\"checkDuplicate\"].json;\n\n// Check if already posted in last 30 days\nconst thirtyDaysAgo = new Date();\nthirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\nconst isDuplicate = recentPosts.some(recent => {\n  return recent.postId === post.id && \n         new Date(recent.postedAt) > thirtyDaysAgo;\n});\n\nif (isDuplicate) {\n  // Skip this post, try another\n  throw new Error('Duplicate post detected, triggering retry');\n}\n\n// Format post for Facebook\nconst fbPost = {\n  message: post.caption.facebook || post.caption.default,\n  link: `https://go2-thailand.com${post.link}`,\n  hashtags: post.hashtags.join(' '),\n  imageUrl: post.imageUrl.startsWith('http') \n    ? post.imageUrl \n    : `https://go2-thailand.com${post.imageUrl}`\n};\n\n// Add tracking\nfbPost.postId = post.id;\nfbPost.contentType = post.type;\n\nreturn [fbPost];"
      },
      "position": [1340, 200]
    },
    {
      "id": "formatForInstagram",
      "type": "n8n-nodes-base.code",
      "name": "Format for Instagram",
      "parameters": {
        "jsCode": "const post = $input.first().json;\n\n// Format post for Instagram\nconst igPost = {\n  caption: post.caption.instagram || post.caption.default,\n  imageUrl: post.imageUrl.startsWith('http') \n    ? post.imageUrl \n    : `https://go2-thailand.com${post.imageUrl}`,\n  hashtags: post.hashtags.slice(0, 30).join(' '),\n  altText: post.title\n};\n\n// Add location if available\nif (post.location) {\n  igPost.location = post.location;\n}\n\n// Format caption with hashtags\nigPost.fullCaption = `${igPost.caption}\\n\\n${igPost.hashtags}\\n\\nðŸ”— Link in bio for more Thailand travel tips!`;\n\n// Add tracking\nigPost.postId = post.id;\nigPost.contentType = post.type;\n\nreturn [igPost];"
      },
      "position": [1340, 400]
    },
    {
      "id": "postToFacebook",
      "type": "n8n-nodes-base.facebookGraphApi",
      "name": "Post to Facebook",
      "parameters": {
        "resource": "post",
        "operation": "create",
        "pageId": "{{$credentials.facebookPageId}}",
        "message": "={{$json[\"message\"]}}",
        "link": "={{$json[\"link\"]}}",
        "additionalFields": {}
      },
      "position": [1560, 200]
    },
    {
      "id": "postToInstagram",
      "type": "n8n-nodes-base.instagram",
      "name": "Post to Instagram",
      "parameters": {
        "resource": "media",
        "operation": "create",
        "businessAccountId": "{{$credentials.instagramBusinessAccountId}}",
        "caption": "={{$json[\"fullCaption\"]}}",
        "imageUrl": "={{$json[\"imageUrl\"]}}"
      },
      "position": [1560, 400]
    },
    {
      "id": "logResults",
      "type": "n8n-nodes-base.googleSheets",
      "name": "Log to Google Sheets",
      "parameters": {
        "operation": "append",
        "sheetId": "{{$credentials.socialMediaLogSheet}}",
        "range": "PostLog!A:H",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMode": "defineBelow",
        "fieldsUi": {
          "values": [
            {
              "column": "A",
              "fieldValue": "={{$json[\"postId\"]}}"
            },
            {
              "column": "B",
              "fieldValue": "={{$json[\"contentType\"]}}"
            },
            {
              "column": "C",
              "fieldValue": "={{new Date().toISOString()}}"
            },
            {
              "column": "D",
              "fieldValue": "={{$json[\"platform\"]}}"
            },
            {
              "column": "E",
              "fieldValue": "={{$json[\"message\"] || $json[\"caption\"]}}"
            },
            {
              "column": "F",
              "fieldValue": "={{$json[\"link\"]}}"
            },
            {
              "column": "G",
              "fieldValue": "={{$json[\"fbPostId\"] || $json[\"igMediaId\"]}}"
            },
            {
              "column": "H",
              "fieldValue": "success"
            }
          ]
        }
      },
      "position": [1780, 300]
    }
  ],
  "connections": {
    "schedule": {
      "main": [[{"node": "contentSelector", "type": "main", "index": 0}]]
    },
    "contentSelector": {
      "main": [[{"node": "fetchLiveContent", "type": "main", "index": 0}]]
    },
    "fetchLiveContent": {
      "main": [[{"node": "selectRandom", "type": "main", "index": 0}]]
    },
    "selectRandom": {
      "main": [[{"node": "checkDuplicate", "type": "main", "index": 0}]]
    },
    "checkDuplicate": {
      "main": [[
        {"node": "formatForFacebook", "type": "main", "index": 0},
        {"node": "formatForInstagram", "type": "main", "index": 0}
      ]]
    },
    "formatForFacebook": {
      "main": [[{"node": "postToFacebook", "type": "main", "index": 0}]]
    },
    "formatForInstagram": {
      "main": [[{"node": "postToInstagram", "type": "main", "index": 0}]]
    },
    "postToFacebook": {
      "main": [[{"node": "logResults", "type": "main", "index": 0}]]
    },
    "postToInstagram": {
      "main": [[{"node": "logResults", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  }
}